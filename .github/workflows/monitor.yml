name: LMS Activity Monitor

on:
  schedule:
    # Run at 9 AM and 9 PM UTC (adjust for your timezone)
    - cron: "0 9 * * *" # 9 AM UTC
    - cron: "0 21 * * *" # 9 PM UTC

  workflow_dispatch: # Allow manual triggering

jobs:
  scan-lms:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Chrome
        run: |
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Download previous database
        continue-on-error: true
        run: |
          # Try to download the database from the previous run
          gh run download -n lms-database || echo "No previous database found"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run LMS scan
        env:
          OUSL_USERNAME: ${{ secrets.OUSL_USERNAME }}
          OUSL_PASSWORD: ${{ secrets.OUSL_PASSWORD }}
          RJTA_USERNAME: ${{ secrets.RJTA_USERNAME }}
          RJTA_PASSWORD: ${{ secrets.RJTA_PASSWORD }}
          EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          EMAIL_RECIPIENT: ${{ secrets.EMAIL_RECIPIENT }}
          SMTP_SERVER: smtp.gmail.com
          SMTP_PORT: 587
        run: |
          python scraper.py --headless True

      - name: Upload database
        uses: actions/upload-artifact@v4
        with:
          name: lms-database
          path: lms_data.db
          retention-days: 90

      - name: Commit database to repository (optional)
        continue-on-error: true
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add lms_data.db
          git commit -m "Update LMS database - $(date '+%Y-%m-%d %H:%M:%S')" || echo "No changes to commit"
          git push

      - name: Notify on failure
        if: failure()
        run: |
          echo "LMS scan failed! Check the logs for details."
          # You can add additional notification logic here
